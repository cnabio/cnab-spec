{
  "credentials": {
    "hostkey": {
      "env": "HOST_KEY",
      "path": "/etc/hostkey.txt"
    },
    "image_token": {
      "env": "AZ_IMAGE_TOKEN",
      "applyTo": ["install"]
    },
    "kubeconfig": {
      "path": "/home/.kube/config"
    }
  },
  "definitions": {
    "http_port": {
      "default": 80,
      "maximum": 10240,
      "minimum": 10,
      "type": "integer"
    },
    "port": {
      "maximum": 65535,
      "minimum": 1024,
      "type": "integer"
    },
    "string": {
      "type": "string"
    },
    "x509Certificate": {
      "contentEncoding": "base64",
      "contentMediaType": "application/x-x509-user-cert",
      "type": "string",
      "writeOnly": true
    }
  },
  "description": "An example 'thick' helloworld Cloud-Native Application Bundle",
  "images": {
    "my-microservice": {
      "contentDigest": "sha256:bbbbbbbbbbbb...",
      "description": "helloworld microservice",
      "image": "example/helloworld:0.1.2",
      "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
      "labels": {
        "architecture": "amd64",
        "os": "linux"
      },
      "size": 1337
    }
  },
  "invocationImages": [
    {
      "contentDigest": "sha256:aaaaaaaaaaaa...",
      "image": "example/helloworld:1.2.3",
      "imageType": "docker",
      "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
      "labels": {
        "architecture": "amd64",
        "os": "linux"
      },
      "size": 1337
    }
  ],
  "labels": {
    "app": "helloworld"
  },
  "name": "helloworld",
  "outputs": {
    "clientCert": {
      "definition": "x509Certificate",
      "path": "/cnab/app/outputs/clientCert",
      "labels": {
        "format": "PEM"
      }
    },
    "hostName": {
      "applyTo": [
        "install"
      ],
      "definition": "string",
      "description": "the hostname produced installing the bundle",
      "path": "/cnab/app/outputs/hostname"
    },
    "port": {
      "definition": "port",
      "path": "/cnab/app/outputs/port"
    }
  },
  "parameters": {
    "backend_port": {
      "definition": "http_port",
      "description": "The port that the backend will listen on",
      "destination": {
        "path": "/path/to/backend_port"
      }
    }
  },
  "schemaVersion": "v1.0.0",
  "version": "1.0.0"
}